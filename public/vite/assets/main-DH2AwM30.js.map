{"version":3,"file":"main-DH2AwM30.js","sources":["../../../node_modules/i18n-js/app/assets/javascripts/i18n.js"],"sourcesContent":["// I18n.js\n// =======\n//\n// This small library provides the Rails I18n API on the Javascript.\n// You don't actually have to use Rails (or even Ruby) to use I18n.js.\n// Just make sure you export all translations in an object like this:\n//\n//     I18n.translations.en = {\n//       hello: \"Hello World\"\n//     };\n//\n// See tests for specific formatting like numbers and dates.\n//\n\n// Using UMD pattern from\n// https://github.com/umdjs/umd#regular-module\n// `returnExports.js` version\n;(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(\"i18n\", function(){ return factory(root);});\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(root);\n  } else {\n    // Browser globals (root is window)\n    root.I18n = factory(root);\n  }\n}(this, function(global) {\n  \"use strict\";\n\n  // Use previously defined object if exists in current scope\n  var I18n = global && global.I18n || {};\n\n  // Just cache the Array#slice function.\n  var slice = Array.prototype.slice;\n\n  // Apply number padding.\n  var padding = function(number) {\n    return (\"0\" + number.toString()).substr(-2);\n  };\n\n  // Improved toFixed number rounding function with support for unprecise floating points\n  // JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).\n  var toFixed = function(number, precision) {\n    return decimalAdjust('round', number, -precision).toFixed(precision);\n  };\n\n  // Is a given variable an object?\n  // Borrowed from Underscore.js\n  var isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object'\n  };\n\n  var isFunction = function(func) {\n    var type = typeof func;\n    return type === 'function'\n  };\n\n  // Check if value is different than undefined and null;\n  var isSet = function(value) {\n    return typeof(value) !== 'undefined' && value !== null;\n  };\n\n  // Is a given value an array?\n  // Borrowed from Underscore.js\n  var isArray = function(val) {\n    if (Array.isArray) {\n      return Array.isArray(val);\n    }\n    return Object.prototype.toString.call(val) === '[object Array]';\n  };\n\n  var isString = function(val) {\n    return typeof val === 'string' || Object.prototype.toString.call(val) === '[object String]';\n  };\n\n  var isNumber = function(val) {\n    return typeof val === 'number' || Object.prototype.toString.call(val) === '[object Number]';\n  };\n\n  var isBoolean = function(val) {\n    return val === true || val === false;\n  };\n\n  var isNull = function(val) {\n    return val === null;\n  };\n\n  var decimalAdjust = function(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  };\n\n  var lazyEvaluate = function(message, scope) {\n    if (isFunction(message)) {\n      return message(scope);\n    } else {\n      return message;\n    }\n  };\n\n  var merge = function (dest, obj) {\n    var key, value;\n    for (key in obj) if (obj.hasOwnProperty(key)) {\n      value = obj[key];\n      if (isString(value) || isNumber(value) || isBoolean(value) || isArray(value) || isNull(value)) {\n        dest[key] = value;\n      } else {\n        if (dest[key] == null) dest[key] = {};\n        merge(dest[key], value);\n      }\n    }\n    return dest;\n  };\n\n  // Set default days/months translations.\n  var DATE = {\n      day_names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    , abbr_day_names: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    , month_names: [null, \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    , abbr_month_names: [null, \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    , meridian: [\"AM\", \"PM\"]\n  };\n\n  // Set default number format.\n  var NUMBER_FORMAT = {\n      precision: 3\n    , separator: \".\"\n    , delimiter: \",\"\n    , strip_insignificant_zeros: false\n  };\n\n  // Set default currency format.\n  var CURRENCY_FORMAT = {\n      unit: \"$\"\n    , precision: 2\n    , format: \"%u%n\"\n    , sign_first: true\n    , delimiter: \",\"\n    , separator: \".\"\n  };\n\n  // Set default percentage format.\n  var PERCENTAGE_FORMAT = {\n      unit: \"%\"\n    , precision: 3\n    , format: \"%n%u\"\n    , separator: \".\"\n    , delimiter: \"\"\n  };\n\n  // Set default size units.\n  var SIZE_UNITS = [null, \"kb\", \"mb\", \"gb\", \"tb\"];\n\n  // Other default options\n  var DEFAULT_OPTIONS = {\n    // Set default locale. This locale will be used when fallback is enabled and\n    // the translation doesn't exist in a particular locale.\n      defaultLocale: \"en\"\n    // Set the current locale to `en`.\n    , locale: \"en\"\n    // Set the translation key separator.\n    , defaultSeparator: \".\"\n    // Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.\n    , placeholder: /(?:\\{\\{|%\\{)(.*?)(?:\\}\\}?)/gm\n    // Set if engine should fallback to the default locale when a translation\n    // is missing.\n    , fallbacks: false\n    // Set the default translation object.\n    , translations: {}\n    // Set missing translation behavior. 'message' will display a message\n    // that the translation is missing, 'guess' will try to guess the string\n    , missingBehaviour: 'message'\n    // if you use missingBehaviour with 'message', but want to know that the\n    // string is actually missing for testing purposes, you can prefix the\n    // guessed string by setting the value here. By default, no prefix!\n    , missingTranslationPrefix: ''\n  };\n\n  // Set default locale. This locale will be used when fallback is enabled and\n  // the translation doesn't exist in a particular locale.\n  I18n.reset = function() {\n    var key;\n    for (key in DEFAULT_OPTIONS) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  };\n\n  // Much like `reset`, but only assign options if not already assigned\n  I18n.initializeOptions = function() {\n    var key;\n    for (key in DEFAULT_OPTIONS) if (!isSet(this[key])) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  };\n  I18n.initializeOptions();\n\n  // Return a list of all locales that must be tried before returning the\n  // missing translation message. By default, this will consider the inline option,\n  // current locale and fallback locale.\n  //\n  //     I18n.locales.get(\"de-DE\");\n  //     // [\"de-DE\", \"de\", \"en\"]\n  //\n  // You can define custom rules for any locale. Just make sure you return a array\n  // containing all locales.\n  //\n  //     // Default the Wookie locale to English.\n  //     I18n.locales[\"wk\"] = function(locale) {\n  //       return [\"en\"];\n  //     };\n  //\n  I18n.locales = {};\n\n  // Retrieve locales based on inline locale, current locale or default to\n  // I18n's detection.\n  I18n.locales.get = function(locale) {\n    var result = this[locale] || this[I18n.locale] || this[\"default\"];\n\n    if (isFunction(result)) {\n      result = result(locale);\n    }\n\n    if (isArray(result) === false) {\n      result = [result];\n    }\n\n    return result;\n  };\n\n  // The default locale list.\n  I18n.locales[\"default\"] = function(locale) {\n    var locales = []\n      , list = []\n    ;\n\n    // Handle the inline locale option that can be provided to\n    // the `I18n.t` options.\n    if (locale) {\n      locales.push(locale);\n    }\n\n    // Add the current locale to the list.\n    if (!locale && I18n.locale) {\n      locales.push(I18n.locale);\n    }\n\n    // Add the default locale if fallback strategy is enabled.\n    if (I18n.fallbacks && I18n.defaultLocale) {\n      locales.push(I18n.defaultLocale);\n    }\n\n    // Locale code format 1:\n    // According to RFC4646 (https://www.ietf.org/rfc/rfc4646.txt)\n    // language codes for Traditional Chinese should be `zh-Hant`\n    //\n    // But due to backward compatibility\n    // We use older version of IETF language tag\n    // @see https://www.w3.org/TR/html401/struct/dirlang.html\n    // @see https://en.wikipedia.org/wiki/IETF_language_tag\n    //\n    // Format: `language-code = primary-code ( \"-\" subcode )*`\n    //\n    // primary-code uses ISO639-1\n    // @see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    // @see https://www.iso.org/iso/home/standards/language_codes.htm\n    //\n    // subcode uses ISO 3166-1 alpha-2\n    // @see https://en.wikipedia.org/wiki/ISO_3166\n    // @see https://www.iso.org/iso/country_codes.htm\n    //\n    // @note\n    //   subcode can be in upper case or lower case\n    //   defining it in upper case is a convention only\n\n\n    // Locale code format 2:\n    // Format: `code = primary-code ( \"-\" region-code )*`\n    // primary-code uses ISO 639-1\n    // script-code uses ISO 15924\n    // region-code uses ISO 3166-1 alpha-2\n    // Example: zh-Hant-TW, en-HK, zh-Hant-CN\n    //\n    // It is similar to RFC4646 (or actually the same),\n    // but seems to be limited to language, script, region\n\n    // Compute each locale with its country code.\n    // So this will return an array containing\n    // `de-DE` and `de`\n    // or\n    // `zh-hans-tw`, `zh-hans`, `zh`\n    // locales.\n    locales.forEach(function(locale) {\n      var localeParts = locale.split(\"-\");\n      var firstFallback = null;\n      var secondFallback = null;\n      if (localeParts.length === 3) {\n        firstFallback = [\n          localeParts[0],\n          localeParts[1]\n        ].join(\"-\");\n        secondFallback = localeParts[0];\n      }\n      else if (localeParts.length === 2) {\n        firstFallback = localeParts[0];\n      }\n\n      if (list.indexOf(locale) === -1) {\n        list.push(locale);\n      }\n\n      if (! I18n.fallbacks) {\n        return;\n      }\n\n      [\n        firstFallback,\n        secondFallback\n      ].forEach(function(nullableFallbackLocale) {\n        // We don't want null values\n        if (typeof nullableFallbackLocale === \"undefined\") { return; }\n        if (nullableFallbackLocale === null) { return; }\n        // We don't want duplicate values\n        //\n        // Comparing with `locale` first is faster than\n        // checking whether value's presence in the list\n        if (nullableFallbackLocale === locale) { return; }\n        if (list.indexOf(nullableFallbackLocale) !== -1) { return; }\n\n        list.push(nullableFallbackLocale);\n      });\n    });\n\n    // No locales set? English it is.\n    if (!locales.length) {\n      locales.push(\"en\");\n    }\n\n    return list;\n  };\n\n  // Hold pluralization rules.\n  I18n.pluralization = {};\n\n  // Return the pluralizer for a specific locale.\n  // If no specify locale is found, then I18n's default will be used.\n  I18n.pluralization.get = function(locale) {\n    return this[locale] || this[I18n.locale] || this[\"default\"];\n  };\n\n  // The default pluralizer rule.\n  // It detects the `zero`, `one`, and `other` scopes.\n  I18n.pluralization[\"default\"] = function(count) {\n    switch (count) {\n      case 0: return [\"zero\", \"other\"];\n      case 1: return [\"one\"];\n      default: return [\"other\"];\n    }\n  };\n\n  // Return current locale. If no locale has been set, then\n  // the current locale will be the default locale.\n  I18n.currentLocale = function() {\n    return this.locale || this.defaultLocale;\n  };\n\n  // Check if value is different than undefined and null;\n  I18n.isSet = isSet;\n\n  // Find and process the translation using the provided scope and options.\n  // This is used internally by some functions and should not be used as an\n  // public API.\n  I18n.lookup = function(scope, options) {\n    options = options || {};\n\n    var locales = this.locales.get(options.locale).slice()\n      , locale\n      , scopes\n      , fullScope\n      , translations\n    ;\n\n    fullScope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = fullScope.split(options.separator || this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n\n        if (translations === undefined || translations === null) {\n          break;\n        }\n      }\n\n      if (translations !== undefined && translations !== null) {\n        return translations;\n      }\n    }\n\n    if (isSet(options.defaultValue)) {\n      return lazyEvaluate(options.defaultValue, scope);\n    }\n  };\n\n  // lookup pluralization rule key into translations\n  I18n.pluralizationLookupWithoutFallback = function(count, locale, translations) {\n    var pluralizer = this.pluralization.get(locale)\n      , pluralizerKeys = pluralizer(count)\n      , pluralizerKey\n      , message;\n\n    if (translations && isObject(translations)) {\n      while (pluralizerKeys.length) {\n        pluralizerKey = pluralizerKeys.shift();\n        if (isSet(translations[pluralizerKey])) {\n          message = translations[pluralizerKey];\n          break;\n        }\n      }\n    }\n\n    return message;\n  };\n\n  // Lookup dedicated to pluralization\n  I18n.pluralizationLookup = function(count, scope, options) {\n    options = options || {};\n    var locales = this.locales.get(options.locale).slice()\n      , locale\n      , scopes\n      , translations\n      , message\n    ;\n    scope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = scope.split(options.separator || this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n        if (!isObject(translations)) {\n          break;\n        }\n        if (scopes.length === 0) {\n          message = this.pluralizationLookupWithoutFallback(count, locale, translations);\n        }\n      }\n      if (typeof message !== \"undefined\" && message !== null) {\n        break;\n      }\n    }\n\n    if (typeof message === \"undefined\" || message === null) {\n      if (isSet(options.defaultValue)) {\n        if (isObject(options.defaultValue)) {\n          message = this.pluralizationLookupWithoutFallback(count, options.locale, options.defaultValue);\n        } else {\n          message = options.defaultValue;\n        }\n        translations = options.defaultValue;\n      }\n    }\n\n    return { message: message, translations: translations };\n  };\n\n  // Rails changed the way the meridian is stored.\n  // It started with `date.meridian` returning an array,\n  // then it switched to `time.am` and `time.pm`.\n  // This function abstracts this difference and returns\n  // the correct meridian or the default value when none is provided.\n  I18n.meridian = function() {\n    var time = this.lookup(\"time\");\n    var date = this.lookup(\"date\");\n\n    if (time && time.am && time.pm) {\n      return [time.am, time.pm];\n    } else if (date && date.meridian) {\n      return date.meridian;\n    } else {\n      return DATE.meridian;\n    }\n  };\n\n  // Merge serveral hash options, checking if value is set before\n  // overwriting any value. The precedence is from left to right.\n  //\n  //     I18n.prepareOptions({name: \"John Doe\"}, {name: \"Mary Doe\", role: \"user\"});\n  //     #=> {name: \"John Doe\", role: \"user\"}\n  //\n  I18n.prepareOptions = function() {\n    var args = slice.call(arguments)\n      , options = {}\n      , subject\n    ;\n\n    while (args.length) {\n      subject = args.shift();\n\n      if (typeof(subject) != \"object\") {\n        continue;\n      }\n\n      for (var attr in subject) {\n        if (!subject.hasOwnProperty(attr)) {\n          continue;\n        }\n\n        if (isSet(options[attr])) {\n          continue;\n        }\n\n        options[attr] = subject[attr];\n      }\n    }\n\n    return options;\n  };\n\n  // Generate a list of translation options for default fallbacks.\n  // `defaultValue` is also deleted from options as it is returned as part of\n  // the translationOptions array.\n  I18n.createTranslationOptions = function(scope, options) {\n    var translationOptions = [{scope: scope}];\n\n    // Defaults should be an array of hashes containing either\n    // fallback scopes or messages\n    if (isSet(options.defaults)) {\n      translationOptions = translationOptions.concat(options.defaults);\n    }\n\n    // Maintain support for defaultValue. Since it is always a message\n    // insert it in to the translation options as such.\n    if (isSet(options.defaultValue)) {\n      translationOptions.push({ message: options.defaultValue });\n    }\n\n    return translationOptions;\n  };\n\n  // Translate the given scope with the provided options.\n  I18n.translate = function(scope, options) {\n    options = options || {};\n\n    var translationOptions = this.createTranslationOptions(scope, options);\n\n    var translation;\n    var usedScope = scope;\n\n    var optionsWithoutDefault = this.prepareOptions(options)\n    delete optionsWithoutDefault.defaultValue\n\n    // Iterate through the translation options until a translation\n    // or message is found.\n    var translationFound =\n      translationOptions.some(function(translationOption) {\n        if (isSet(translationOption.scope)) {\n          usedScope = translationOption.scope;\n          translation = this.lookup(usedScope, optionsWithoutDefault);\n        } else if (isSet(translationOption.message)) {\n          translation = lazyEvaluate(translationOption.message, scope);\n        }\n\n        if (translation !== undefined && translation !== null) {\n          return true;\n        }\n      }, this);\n\n    if (!translationFound) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (typeof(translation) === \"string\") {\n      translation = this.interpolate(translation, options);\n    } else if (isArray(translation)) {\n      translation = translation.map(function(t) {\n        return (typeof(t) === \"string\" ? this.interpolate(t, options) : t);\n      }, this);\n    } else if (isObject(translation) && isSet(options.count)) {\n      translation = this.pluralize(options.count, usedScope, options);\n    }\n\n    return translation;\n  };\n\n  // This function interpolates the all variables in the given message.\n  I18n.interpolate = function(message, options) {\n    if (message == null) {\n      return message;\n    }\n\n    options = options || {};\n    var matches = message.match(this.placeholder)\n      , placeholder\n      , value\n      , name\n      , regex\n    ;\n\n    if (!matches) {\n      return message;\n    }\n\n    while (matches.length) {\n      placeholder = matches.shift();\n      name = placeholder.replace(this.placeholder, \"$1\");\n\n      if (isSet(options[name])) {\n        value = options[name].toString().replace(/\\$/gm, \"_#$#_\");\n      } else if (name in options) {\n        value = this.nullPlaceholder(placeholder, message, options);\n      } else {\n        value = this.missingPlaceholder(placeholder, message, options);\n      }\n\n      regex = new RegExp(placeholder.replace(/{/gm, \"\\\\{\").replace(/}/gm, \"\\\\}\"));\n      message = message.replace(regex, value);\n    }\n\n    return message.replace(/_#\\$#_/g, \"$\");\n  };\n\n  // Pluralize the given scope using the `count` value.\n  // The pluralized translation may have other placeholders,\n  // which will be retrieved from `options`.\n  I18n.pluralize = function(count, scope, options) {\n    options = this.prepareOptions({count: String(count)}, options)\n    var pluralizer, result;\n\n    result = this.pluralizationLookup(count, scope, options);\n    if (typeof result.translations === \"undefined\" || result.translations == null) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (typeof result.message !== \"undefined\" && result.message != null) {\n      return this.interpolate(result.message, options);\n    }\n    else {\n      pluralizer = this.pluralization.get(options.locale);\n      return this.missingTranslation(scope + '.' + pluralizer(count)[0], options);\n    }\n  };\n\n  // Return a missing translation message for the given parameters.\n  I18n.missingTranslation = function(scope, options) {\n    //guess intended string\n    if(this.missingBehaviour === 'guess'){\n      //get only the last portion of the scope\n      var s = scope.split('.').slice(-1)[0];\n      //replace underscore with space && camelcase with space and lowercase letter\n      return (this.missingTranslationPrefix.length > 0 ? this.missingTranslationPrefix : '') +\n          s.replace(/_/g,' ').replace(/([a-z])([A-Z])/g,\n          function(match, p1, p2) {return p1 + ' ' + p2.toLowerCase()} );\n    }\n\n    var localeForTranslation = (options != null && options.locale != null) ? options.locale : this.currentLocale();\n    var fullScope           = this.getFullScope(scope, options);\n    var fullScopeWithLocale = [localeForTranslation, fullScope].join(options.separator || this.defaultSeparator);\n\n    return '[missing \"' + fullScopeWithLocale + '\" translation]';\n  };\n\n  // Return a missing placeholder message for given parameters\n  I18n.missingPlaceholder = function(placeholder, message, options) {\n    return \"[missing \" + placeholder + \" value]\";\n  };\n\n  I18n.nullPlaceholder = function() {\n    return I18n.missingPlaceholder.apply(I18n, arguments);\n  };\n\n  // Format number using localization rules.\n  // The options will be retrieved from the `number.format` scope.\n  // If this isn't present, then the following options will be used:\n  //\n  // - `precision`: `3`\n  // - `separator`: `\".\"`\n  // - `delimiter`: `\",\"`\n  // - `strip_insignificant_zeros`: `false`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toNumber = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.format\")\n      , NUMBER_FORMAT\n    );\n\n    var negative = number < 0\n      , string = toFixed(Math.abs(number), options.precision).toString()\n      , parts = string.split(\".\")\n      , precision\n      , buffer = []\n      , formattedNumber\n      , format = options.format || \"%n\"\n      , sign = negative ? \"-\" : \"\"\n    ;\n\n    number = parts[0];\n    precision = parts[1];\n\n    while (number.length > 0) {\n      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));\n      number = number.substr(0, number.length -3);\n    }\n\n    formattedNumber = buffer.join(options.delimiter);\n\n    if (options.strip_insignificant_zeros && precision) {\n      precision = precision.replace(/0+$/, \"\");\n    }\n\n    if (options.precision > 0 && precision) {\n      formattedNumber += options.separator + precision;\n    }\n\n    if (options.sign_first) {\n      format = \"%s\" + format;\n    }\n    else {\n      format = format.replace(\"%n\", \"%s%n\");\n    }\n\n    formattedNumber = format\n      .replace(\"%u\", options.unit)\n      .replace(\"%n\", formattedNumber)\n      .replace(\"%s\", sign)\n    ;\n\n    return formattedNumber;\n  };\n\n  // Format currency with localization rules.\n  // The options will be retrieved from the `number.currency.format` and\n  // `number.format` scopes, in that order.\n  //\n  // Any missing option will be retrieved from the `I18n.toNumber` defaults and\n  // the following options:\n  //\n  // - `unit`: `\"$\"`\n  // - `precision`: `2`\n  // - `format`: `\"%u%n\"`\n  // - `delimiter`: `\",\"`\n  // - `separator`: `\".\"`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toCurrency = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.currency.format\", options)\n      , this.lookup(\"number.format\", options)\n      , CURRENCY_FORMAT\n    );\n\n    return this.toNumber(number, options);\n  };\n\n  // Localize several values.\n  // You can provide the following scopes: `currency`, `number`, or `percentage`.\n  // If you provide a scope that matches the `/^(date|time)/` regular expression\n  // then the `value` will be converted by using the `I18n.toTime` function.\n  //\n  // It will default to the value's `toString` function.\n  //\n  I18n.localize = function(scope, value, options) {\n    options || (options = {});\n\n    switch (scope) {\n      case \"currency\":\n        return this.toCurrency(value, options);\n      case \"number\":\n        scope = this.lookup(\"number.format\", options);\n        return this.toNumber(value, scope);\n      case \"percentage\":\n        return this.toPercentage(value, options);\n      default:\n        var localizedValue;\n\n        if (scope.match(/^(date|time)/)) {\n          localizedValue = this.toTime(scope, value, options);\n        } else {\n          localizedValue = value.toString();\n        }\n\n        return this.interpolate(localizedValue, options);\n    }\n  };\n\n  // Parse a given `date` string into a JavaScript Date object.\n  // This function is time zone aware.\n  //\n  // The following string formats are recognized:\n  //\n  //    yyyy-mm-dd\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ssZ\n  //    yyyy-mm-dd[ T]hh:mm::ss+0000\n  //    yyyy-mm-dd[ T]hh:mm::ss+00:00\n  //    yyyy-mm-dd[ T]hh:mm::ss.123Z\n  //\n  I18n.parseDate = function(date) {\n    var matches, convertedDate, fraction;\n    // A date input of `null` or `undefined` will be returned as-is\n    if (date == null) {\n      return date;\n    }\n    // we have a date, so just return it.\n    if (typeof(date) === \"object\") {\n      return date;\n    }\n\n    matches = date.toString().match(/(\\d{4})-(\\d{2})-(\\d{2})(?:[ T](\\d{2}):(\\d{2}):(\\d{2})([\\.,]\\d{1,3})?)?(Z|\\+00:?00)?/);\n\n    if (matches) {\n      for (var i = 1; i <= 6; i++) {\n        matches[i] = parseInt(matches[i], 10) || 0;\n      }\n\n      // month starts on 0\n      matches[2] -= 1;\n\n      fraction = matches[7] ? 1000 * (\"0\" + matches[7]) : null;\n\n      if (matches[8]) {\n        convertedDate = new Date(Date.UTC(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction));\n      } else {\n        convertedDate = new Date(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction);\n      }\n    } else if (typeof(date) == \"number\") {\n      // UNIX timestamp\n      convertedDate = new Date();\n      convertedDate.setTime(date);\n    } else if (date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\\d+) (\\d+:\\d+:\\d+) ([+-]\\d+) (\\d+)/)) {\n      // This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by\n      // webkit/firefox, but not by IE, so we must parse it manually.\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse([\n        RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5\n      ].join(\" \")));\n    } else if (date.match(/\\d+ \\d+:\\d+:\\d+ [+-]\\d+ \\d+/)) {\n      // a valid javascript format with timezone info\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    } else {\n      // an arbitrary javascript string\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    }\n\n    return convertedDate;\n  };\n\n  // Formats time according to the directives in the given format string.\n  // The directives begins with a percent (%) character. Any text not listed as a\n  // directive will be passed through to the output string.\n  //\n  // The accepted formats are:\n  //\n  //     %a     - The abbreviated weekday name (Sun)\n  //     %A     - The full weekday name (Sunday)\n  //     %b     - The abbreviated month name (Jan)\n  //     %B     - The full month name (January)\n  //     %c     - The preferred local date and time representation\n  //     %d     - Day of the month (01..31)\n  //     %-d    - Day of the month (1..31)\n  //     %H     - Hour of the day, 24-hour clock (00..23)\n  //     %-H/%k - Hour of the day, 24-hour clock (0..23)\n  //     %I     - Hour of the day, 12-hour clock (01..12)\n  //     %-I/%l - Hour of the day, 12-hour clock (1..12)\n  //     %m     - Month of the year (01..12)\n  //     %-m    - Month of the year (1..12)\n  //     %M     - Minute of the hour (00..59)\n  //     %-M    - Minute of the hour (0..59)\n  //     %p     - Meridian indicator (AM  or  PM)\n  //     %P     - Meridian indicator (am  or  pm)\n  //     %S     - Second of the minute (00..60)\n  //     %-S    - Second of the minute (0..60)\n  //     %w     - Day of the week (Sunday is 0, 0..6)\n  //     %y     - Year without a century (00..99)\n  //     %-y    - Year without a century (0..99)\n  //     %Y     - Year with century\n  //     %z/%Z  - Timezone offset (+0545)\n  //\n  I18n.strftime = function(date, format, options) {\n    var options = this.lookup(\"date\", options)\n      , meridianOptions = I18n.meridian()\n    ;\n\n    if (!options) {\n      options = {};\n    }\n\n    options = this.prepareOptions(options, DATE);\n\n    if (isNaN(date.getTime())) {\n      throw new Error('I18n.strftime() requires a valid date object, but received an invalid date.');\n    }\n\n    var weekDay = date.getDay()\n      , day = date.getDate()\n      , year = date.getFullYear()\n      , month = date.getMonth() + 1\n      , hour = date.getHours()\n      , hour12 = hour\n      , meridian = hour > 11 ? 1 : 0\n      , secs = date.getSeconds()\n      , mins = date.getMinutes()\n      , offset = date.getTimezoneOffset()\n      , absOffsetHours = Math.floor(Math.abs(offset / 60))\n      , absOffsetMinutes = Math.abs(offset) - (absOffsetHours * 60)\n      , timezoneoffset = (offset > 0 ? \"-\" : \"+\") +\n          (absOffsetHours.toString().length < 2 ? \"0\" + absOffsetHours : absOffsetHours) +\n          (absOffsetMinutes.toString().length < 2 ? \"0\" + absOffsetMinutes : absOffsetMinutes)\n    ;\n\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    } else if (hour12 === 0) {\n      hour12 = 12;\n    }\n\n    format = format.replace(\"%a\", options.abbr_day_names[weekDay]);\n    format = format.replace(\"%A\", options.day_names[weekDay]);\n    format = format.replace(\"%b\", options.abbr_month_names[month]);\n    format = format.replace(\"%B\", options.month_names[month]);\n    format = format.replace(\"%d\", padding(day));\n    format = format.replace(\"%e\", day);\n    format = format.replace(\"%-d\", day);\n    format = format.replace(\"%H\", padding(hour));\n    format = format.replace(\"%-H\", hour);\n    format = format.replace(\"%k\", hour);\n    format = format.replace(\"%I\", padding(hour12));\n    format = format.replace(\"%-I\", hour12);\n    format = format.replace(\"%l\", hour12);\n    format = format.replace(\"%m\", padding(month));\n    format = format.replace(\"%-m\", month);\n    format = format.replace(\"%M\", padding(mins));\n    format = format.replace(\"%-M\", mins);\n    format = format.replace(\"%p\", meridianOptions[meridian]);\n    format = format.replace(\"%P\", meridianOptions[meridian].toLowerCase());\n    format = format.replace(\"%S\", padding(secs));\n    format = format.replace(\"%-S\", secs);\n    format = format.replace(\"%w\", weekDay);\n    format = format.replace(\"%y\", padding(year));\n    format = format.replace(\"%-y\", padding(year).replace(/^0+/, \"\"));\n    format = format.replace(\"%Y\", year);\n    format = format.replace(\"%z\", timezoneoffset);\n    format = format.replace(\"%Z\", timezoneoffset);\n\n    return format;\n  };\n\n  // Convert the given dateString into a formatted date.\n  I18n.toTime = function(scope, dateString, options) {\n    var date = this.parseDate(dateString)\n      , format = this.lookup(scope, options)\n    ;\n\n    // A date input of `null` or `undefined` will be returned as-is\n    if (date == null) {\n      return date;\n    }\n\n    var date_string = date.toString()\n    if (date_string.match(/invalid/i)) {\n      return date_string;\n    }\n\n    if (!format) {\n      return date_string;\n    }\n\n    return this.strftime(date, format, options);\n  };\n\n  // Convert a number into a formatted percentage value.\n  I18n.toPercentage = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.percentage.format\", options)\n      , this.lookup(\"number.format\", options)\n      , PERCENTAGE_FORMAT\n    );\n\n    return this.toNumber(number, options);\n  };\n\n  // Convert a number into a readable size representation.\n  I18n.toHumanSize = function(number, options) {\n    var kb = 1024\n      , size = number\n      , iterations = 0\n      , unit\n      , precision\n      , fullScope\n    ;\n\n    while (size >= kb && iterations < 4) {\n      size = size / kb;\n      iterations += 1;\n    }\n\n    if (iterations === 0) {\n      fullScope = this.getFullScope(\"number.human.storage_units.units.byte\", options);\n      unit = this.t(fullScope, {count: size});\n      precision = 0;\n    } else {\n      fullScope = this.getFullScope(\"number.human.storage_units.units.\" + SIZE_UNITS[iterations], options);\n      unit = this.t(fullScope);\n      precision = (size - Math.floor(size) === 0) ? 0 : 1;\n    }\n\n    options = this.prepareOptions(\n        options\n      , {unit: unit, precision: precision, format: \"%n%u\", delimiter: \"\"}\n    );\n\n    return this.toNumber(size, options);\n  };\n\n  I18n.getFullScope = function(scope, options) {\n    options = options || {};\n\n    // Deal with the scope as an array.\n    if (isArray(scope)) {\n      scope = scope.join(options.separator || this.defaultSeparator);\n    }\n\n    // Deal with the scope option provided through the second argument.\n    //\n    //    I18n.t('hello', {scope: 'greetings'});\n    //\n    if (options.scope) {\n      scope = [options.scope, scope].join(options.separator || this.defaultSeparator);\n    }\n\n    return scope;\n  };\n  /**\n   * Merge obj1 with obj2 (shallow merge), without modifying inputs\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @returns {Object} Merged values of obj1 and obj2\n   *\n   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used\n   * Idea is from:\n   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8\n   */\n  I18n.extend = function ( obj1, obj2 ) {\n    if (typeof(obj1) === \"undefined\" && typeof(obj2) === \"undefined\") {\n      return {};\n    }\n    return merge(obj1, obj2);\n  };\n\n  // Set aliases, so we can save some typing.\n  I18n.t = I18n.translate.bind(I18n);\n  I18n.l = I18n.localize.bind(I18n);\n  I18n.p = I18n.pluralize.bind(I18n);\n\n  return I18n;\n}));\n"],"names":["root","factory","module","this","global","I18n","slice","padding","number","toFixed","precision","decimalAdjust","isObject","obj","type","isFunction","func","isSet","value","isArray","val","isString","isNumber","isBoolean","isNull","exp","lazyEvaluate","message","scope","merge","dest","key","DATE","NUMBER_FORMAT","CURRENCY_FORMAT","PERCENTAGE_FORMAT","SIZE_UNITS","DEFAULT_OPTIONS","locale","result","locales","list","localeParts","firstFallback","secondFallback","nullableFallbackLocale","count","options","scopes","fullScope","translations","pluralizer","pluralizerKeys","pluralizerKey","time","date","args","subject","attr","translationOptions","translation","usedScope","optionsWithoutDefault","translationFound","translationOption","t","matches","placeholder","name","regex","s","match","p1","p2","localeForTranslation","fullScopeWithLocale","negative","string","parts","buffer","formattedNumber","format","sign","localizedValue","convertedDate","fraction","i","meridianOptions","weekDay","day","year","month","hour","hour12","meridian","secs","mins","offset","absOffsetHours","absOffsetMinutes","timezoneoffset","dateString","date_string","kb","size","iterations","unit","obj1","obj2"],"mappings":"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","x_google_ignoreList":[0]}